{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38093\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430 \\u043F\\u0430\\u043F\\u043A\\u0430\\\\tic-tac-toe\\\\src\\\\components\\\\TicTacToe\\\\TicTacToe.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./TicTacToe.scss\";\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from '../../store/Reducers';\nimport { RxCross1 } from 'react-icons/rx';\nimport { FaRegCircle } from 'react-icons/fa';\nimport { removeIconAction, removeVisibleAction } from '../../store/Reducers/Reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicTacToe = () => {\n  _s();\n  const [crossOrCircle, setCrossOrCircle] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    TicTacToe\n  } = useTypedSelector(state => state.ticTacToe);\n  const visibleIcon = t => {\n    dispatch(removeIconAction(t.icon = crossOrCircle));\n    dispatch(removeVisibleAction(t));\n    setCrossOrCircle(!crossOrCircle);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_ttt\",\n    children: TicTacToe.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => visibleIcon(t),\n      children: t.visible ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: t.icon ? /*#__PURE__*/_jsxDEV(RxCross1, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(FaRegCircle, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 23\n      }, this)\n    }, t.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(TicTacToe, \"J0pfL6S+aGuK/iOoMNfDkKZu/Ow=\", false, function () {\n  return [useDispatch, useTypedSelector];\n});\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","useDispatch","useTypedSelector","RxCross1","FaRegCircle","removeIconAction","removeVisibleAction","jsxDEV","_jsxDEV","TicTacToe","_s","crossOrCircle","setCrossOrCircle","dispatch","state","ticTacToe","visibleIcon","t","icon","className","children","map","onClick","visible","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/38093/Desktop/Нова папка/tic-tac-toe/src/components/TicTacToe/TicTacToe.tsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport \"./TicTacToe.scss\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useTypedSelector } from '../../store/Reducers'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { FaRegCircle } from 'react-icons/fa'\r\nimport { removeIconAction, removeVisibleAction, TypeTicTacToe } from '../../store/Reducers/Reducer'\r\n\r\n\r\nconst TicTacToe: React.FC = () => {\r\n    \r\n    const [crossOrCircle , setCrossOrCircle] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const { TicTacToe } = useTypedSelector(state => state.ticTacToe)\r\n\r\n\r\n    const visibleIcon = (t: TypeTicTacToe) => {\r\n        dispatch(removeIconAction(t.icon = crossOrCircle))\r\n        dispatch(removeVisibleAction(t))\r\n        setCrossOrCircle(!crossOrCircle)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container_ttt'>\r\n            {TicTacToe.map(t => \r\n                <div onClick={() => visibleIcon(t)} key={t.id}>\r\n                    {t.visible\r\n                    ? <div className=\"box\">\r\n                        {t.icon\r\n                        ? <RxCross1 className='icon'/>\r\n                        : <FaRegCircle className='icon'/>\r\n                        }\r\n                      </div>\r\n                    : <div className=\"box\"></div>\r\n                    }\r\n                </div>    \r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TicTacToe\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,kBAAkB;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,gBAAgB,EAAEC,mBAAmB,QAAuB,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnG,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE9B,MAAM,CAACC,aAAa,EAAGC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAU,KAAK,CAAC;EAEnE,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ;EAAU,CAAC,GAAGP,gBAAgB,CAACY,KAAK,IAAIA,KAAK,CAACC,SAAS,CAAC;EAGhE,MAAMC,WAAW,GAAIC,CAAgB,IAAK;IACtCJ,QAAQ,CAACR,gBAAgB,CAACY,CAAC,CAACC,IAAI,GAAGP,aAAa,CAAC,CAAC;IAClDE,QAAQ,CAACP,mBAAmB,CAACW,CAAC,CAAC,CAAC;IAChCL,gBAAgB,CAAC,CAACD,aAAa,CAAC;EACpC,CAAC;EAGD,oBACIH,OAAA;IAAKW,SAAS,EAAC,eAAe;IAAAC,QAAA,EACzBX,SAAS,CAACY,GAAG,CAACJ,CAAC,iBACZT,OAAA;MAAKc,OAAO,EAAEA,CAAA,KAAMN,WAAW,CAACC,CAAC,CAAE;MAAAG,QAAA,EAC9BH,CAAC,CAACM,OAAO,gBACRf,OAAA;QAAKW,SAAS,EAAC,KAAK;QAAAC,QAAA,EACjBH,CAAC,CAACC,IAAI,gBACLV,OAAA,CAACL,QAAQ;UAACgB,SAAS,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,gBAC5BnB,OAAA,CAACJ,WAAW;UAACe,SAAS,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE9B,CAAC,gBACNnB,OAAA;QAAKW,SAAS,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC,GARQV,CAAC,CAACW,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUxC,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAAjB,EAAA,CAhCKD,SAAmB;EAAA,QAIJR,WAAW,EACNC,gBAAgB;AAAA;AAAA2B,EAAA,GALpCpB,SAAmB;AAkCzB,eAAeA,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}